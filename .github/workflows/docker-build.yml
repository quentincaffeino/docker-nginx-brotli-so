name: docker-build

on:
  push:
    branches: master

  schedule:
    - cron: "0 0 */4 * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CACHE_FROM: "/tmp/.buildx-cache"
  CACHE_TO: "/tmp/.buildx-cache-new"
  PUSH_IMAGES: "${{ github.ref_name == 'master' && '--push' || '' }}"

jobs:
  log:
    runs-on: ubuntu-latest
    steps:
      - name: 'Log git branch'
        run: echo "${{ github.ref_name }}"

      - name: 'Log github.event.inputs'
        env:
          INPUTS: ${{ toJson(github.event.inputs) }}
        run: echo "$INPUTS"

      - name: 'Log inputs'
        env:
          INPUTS: ${{ toJson(inputs) }}
        run: echo "$INPUTS"

      - name: 'Log env'
        env:
          ENV_STR: ${{ toJson(env) }}
        run: echo "$ENV_STR"

  docker-build:
    runs-on: ubuntu-latest
    needs:
      - log
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # This is the a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_FROM }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push images
        run: |
          make \
            build \
            USER=${{ github.repository_owner }} \
            PUSH_IMAGES=$PUSH_IMAGES \
            QUIET=

        # This ugly bit is necessary if you don't want your cache to grow forever
        # till it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf "${CACHE_FROM}"
          mv "${CACHE_TO}" "${CACHE_FROM}"
